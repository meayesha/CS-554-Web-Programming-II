[{"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/index.js":"1","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/App.js":"2","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/reportWebVitals.js":"3","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js":"4","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesPage.js":"5","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ComicsPage.js":"6","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharacterInfo.js":"7","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/Homepage.js":"8","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ErrorPage.js":"9","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesInfo.js":"10","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ComicsInfo.js":"11","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/Page.js":"12"},{"size":500,"mtime":1617899735909,"results":"13","hashOfConfig":"14"},{"size":1585,"mtime":1617961224462,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1617899735911,"results":"16","hashOfConfig":"14"},{"size":3120,"mtime":1617961790424,"results":"17","hashOfConfig":"14"},{"size":2809,"mtime":1617961813510,"results":"18","hashOfConfig":"14"},{"size":2807,"mtime":1617961801991,"results":"19","hashOfConfig":"14"},{"size":6439,"mtime":1617947433700,"results":"20","hashOfConfig":"14"},{"size":337,"mtime":1617906210899,"results":"21","hashOfConfig":"14"},{"size":209,"mtime":1617961452602,"results":"22","hashOfConfig":"14"},{"size":7432,"mtime":1617947360674,"results":"23","hashOfConfig":"14"},{"size":8510,"mtime":1617961604025,"results":"24","hashOfConfig":"14"},{"size":1831,"mtime":1617955633851,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"l0178d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/index.js",[],["53","54"],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/App.js",[],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/reportWebVitals.js",[],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js",["55","56","57","58","59"],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesPage.js",["60","61","62","63","64"],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ComicsPage.js",["65","66","67","68","69"],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharacterInfo.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {\n    makeStyles,\n    Card,\n    CardContent,\n    CardMedia,\n    Typography,\n    CardHeader\n  } from '@material-ui/core';\n  import '../App.css';\n  const useStyles = makeStyles({\n    card: {\n      maxWidth: 550,\n      height: 'auto',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderRadius: 5,\n      border: '1px solid #1e8678',\n      boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n    },\n    titleHead: {\n      borderBottom: '1px solid #1e8678',\n      fontWeight: 'bold'\n    },\n    grid: {\n      flexGrow: 1,\n      flexDirection: 'row'\n    },\n    media: {\n      height: '100%',\n      width: '100%'\n    },\n    button: {\n      color: '#1e8678',\n      fontWeight: 'bold',\n      fontSize: 12\n    }\n  });\nconst CharacterInfo = (props) => {\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    const [characterId, setCharacterId] = useState(undefined);\n    const [characterInfo, setCharacterInfo] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(\n        () => {\n\n            setCharacterId(parseInt(props.match.params.id));\n            async function fetchData() {\n                try {\n                    const { data } = await axios.get(`https://gateway.marvel.com:443/v1/public/characters/${props.match.params.id}` + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n                    setCharacterInfo(data);\n                    setLoading(false);\n                    console.log('param is' + characterId);\n                    console.log(data);\n                } catch (e) {\n                    console.log(e);\n                }\n\n            }\n            fetchData();\n        }, [props.match.params.id]\n    );\n\n    let characterData =(\n        \n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            <dl>\n    <div>\n        {characterInfo && characterInfo.data.results.map((character, index)=>{\n            return (\n                <div>\n                <p>id: {character.id}</p>\n                <p>name: {character.name}</p>\n                <p>description: {character.description}</p>\n                <p>modified: {character.modified}</p>\n                <p>\n                    <dt className=\"thumbnail\">Thumbnail</dt>\n                    <a>\n                    <dd> path: {character.thumbnail.path}</dd> \n                    <dd> extension: {character.thumbnail.extension}</dd>\n                    </a>\n                </p>\n                <p>resourceURI: {character.resourceURI}</p>\n                <p><dt className=\"comics\">Comics</dt>\n                <a>\n                    <dd> available: {character.comics.available}</dd>\n                    <dd> collectionURI: {character.comics.collectionURI}</dd>\n                    </a>\n                    {character.comics.items.map((item , index)=>{\n                        return(\n                       <a> \n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.comics.returned}</dd>\n                    </p>\n                <p><dt className=\"series\">Series</dt>\n                <a>\n                    <dd> available: {character.series.available}</dd>\n                    <dd> collectionURI: {character.series.collectionURI}</dd>\n                    </a>\n                    {character.series.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.series.returned}</dd></p>\n                <p><dt className=\"stories\">Stories</dt>\n                    <dd> available: {character.stories.available}</dd>\n                    <dd> collectionURI: {character.stories.collectionURI}</dd>\n                    \n                    {character.stories.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        <dd>type: {item.type}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.stories.returned}</dd></p>\n                <p><dt className=\"events\">Events</dt>\n                <a>\n                    <dd> available: {character.events.available}</dd>\n                    <dd> collectionURI: {character.events.collectionURI}</dd>\n                    </a>\n                    {character.events.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.stories.returned}</dd>\n                        </p>\n                <p><dt className=\"urls\">URLS</dt>\n                \n                    {character.urls.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>type: {item.type}</dd>\n                        <dd>url: {item.url}</dd>\n                        </a>\n                        )})}\n                        \n                </p>\n                 </div>\n            )\n        })}\n        </div>\n        </dl>\n        </Typography>\n        </CardContent>\n      \n        )\n        if(loading){\n            return(\n                <div>\n                    <h2>Loading .....</h2>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div>\n                    {characterData}\n                </div>\n            )\n        }\n    }\n    \n    export default CharacterInfo;\n","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/Homepage.js",[],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ErrorPage.js",[],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesInfo.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {\n    makeStyles,\n    Card,\n    CardContent,\n    CardMedia,\n    Typography,\n    CardHeader\n  } from '@material-ui/core';\n  import '../App.css';\n  const useStyles = makeStyles({\n    card: {\n      maxWidth: 550,\n      height: 'auto',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderRadius: 5,\n      border: '1px solid #1e8678',\n      boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n    },\n    titleHead: {\n      borderBottom: '1px solid #1e8678',\n      fontWeight: 'bold'\n    },\n    grid: {\n      flexGrow: 1,\n      flexDirection: 'row'\n    },\n    media: {\n      height: '100%',\n      width: '100%'\n    },\n    button: {\n      color: '#1e8678',\n      fontWeight: 'bold',\n      fontSize: 12\n    }\n  });\nconst SeriesInfo = (props) => {\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    const [seriesId, setSeriesId] = useState(undefined);\n    const [seriesInfo, setSeriesInfo] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(\n        () => {\n\n            setSeriesId(parseInt(props.match.params.id));\n            async function fetchData() {\n                try {\n                    const { data } = await axios.get(`https://gateway.marvel.com:443/v1/public/series/${props.match.params.id}` + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n                    setSeriesInfo(data);\n                    setLoading(false);\n                    console.log('param is' + seriesId);\n                    console.log(data);\n                } catch (e) {\n                    console.log(e);\n                }\n\n            }\n            fetchData();\n        }, [props.match.params.id]\n    );\n\n    let seriesData =(\n        \n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            <dl>\n    <div>\n        {seriesInfo && seriesInfo.data.results.map((seriesdata, index)=>{\n            return (\n                <div>\n                <p>id: {seriesdata.id}</p>\n                <p>title: {seriesdata.title}</p>\n                <p>description: {seriesdata.description}</p>\n                <p>resourceURI: {seriesdata.resourceURI}</p>\n                <p><dt className=\"urls\">URLS</dt>\n                \n                    {seriesdata.urls.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>type: {item.type}</dd>\n                        <dd>url: {item.url}</dd>\n                        </a>\n                        )})}\n                        \n                </p>\n                <p>startYear: {seriesdata.startYear}</p>\n                <p>endYear: {seriesdata.endYear}</p>\n                <p>rating: {seriesdata.rating}</p>\n                <p>type: {seriesdata.type}</p>\n                <p>modified: {seriesdata.modified}</p>\n                <p>\n                    <dt className=\"thumbnail\">Thumbnail</dt>\n                    <a>\n                    <dd> path: {seriesdata.thumbnail.path}</dd>\n                    <dd> extension: {seriesdata.thumbnail.extension}</dd>\n                    </a>\n                </p>\n                <p><dt className=\"creators\">Creators</dt>\n                <a>\n                    <dd> available: {seriesdata.creators.available}</dd>\n                    <dd> collectionURI: {seriesdata.creators.collectionURI}</dd>\n                    </a>\n                    {seriesdata.creators.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        <dd>role: {item.role}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {seriesdata.creators.returned}</dd></p>\n                <p><dt className=\"characters\">Characters</dt>\n                    <dd> available: {seriesdata.characters.available}</dd>\n                    <dd> collectionURI: {seriesdata.characters.collectionURI}</dd>\n                    \n                    {/* {comic.stories.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        <dd>type: {item.type}</dd>\n                        </a>\n                        )})} */}\n                        \n                        <dd>returned: {seriesdata.characters.returned}</dd></p>\n                    <p><dt className=\"stories\">Stories</dt>\n                    <dd> available: {seriesdata.stories.available}</dd>\n                    <dd> collectionURI: {seriesdata.stories.collectionURI}</dd>\n                    \n                    {seriesdata.stories.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        <dd>type: {item.type}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {seriesdata.characters.returned}</dd></p>\n                        <p><dt className=\"comics\">Comics</dt>\n                    <dd> available: {seriesdata.comics.available}</dd>\n                    <dd> collectionURI: {seriesdata.comics.collectionURI}</dd>\n                    \n                    {seriesdata.comics.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {seriesdata.comics.returned}</dd></p>\n                <p><dt className=\"events\">Events</dt>\n                <a>\n                    <dd> available: {seriesdata.events.available}</dd>\n                    <dd> collectionURI: {seriesdata.events.collectionURI}</dd>\n                    </a>\n                    {/* {comic.events.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})} */}\n                        \n                        <dd>returned: {seriesdata.stories.returned}</dd>\n                        </p>\n                \n                 </div>\n            )\n        })}\n        </div>\n        </dl>\n        </Typography>\n        </CardContent>\n      \n        )\n        if(loading){\n            return(\n                <div>\n                    <h2>Loading .....</h2>\n                </div>\n            )\n        }\n        else{\n            return(\n                <Card>\n                <div>\n                    {seriesData}\n                </div>\n                </Card>\n            )\n        }\n    }\n    \n    export default SeriesInfo;\n","/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/ComicsInfo.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/Page.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":11},{"ruleId":"119","severity":1,"message":"124","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":26,"column":20,"nodeType":"127","endLine":26,"endColumn":51},{"ruleId":"128","severity":1,"message":"129","line":29,"column":79,"nodeType":"130","messageId":"131","endLine":29,"endColumn":80},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":11},{"ruleId":"119","severity":1,"message":"124","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":26,"column":20,"nodeType":"127","endLine":26,"endColumn":51},{"ruleId":"128","severity":1,"message":"129","line":29,"column":76,"nodeType":"130","messageId":"131","endLine":29,"endColumn":77},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"123","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":11},{"ruleId":"119","severity":1,"message":"124","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":26,"column":20,"nodeType":"127","endLine":26,"endColumn":51},{"ruleId":"128","severity":1,"message":"129","line":29,"column":76,"nodeType":"130","messageId":"131","endLine":29,"endColumn":77},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"132","line":6,"column":5,"nodeType":"121","messageId":"122","endLine":6,"endColumn":9},{"ruleId":"119","severity":1,"message":"133","line":8,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":10,"column":5,"nodeType":"121","messageId":"122","endLine":10,"endColumn":15},{"ruleId":"119","severity":1,"message":"135","line":13,"column":9,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":58,"column":133,"nodeType":"130","messageId":"131","endLine":58,"endColumn":134},{"ruleId":"125","severity":1,"message":"136","line":69,"column":12,"nodeType":"137","endLine":69,"endColumn":35,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":87,"column":21,"nodeType":"141","endLine":87,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":94,"column":17,"nodeType":"141","endLine":94,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":100,"column":24,"nodeType":"141","endLine":100,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":109,"column":17,"nodeType":"141","endLine":109,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":115,"column":25,"nodeType":"141","endLine":115,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":128,"column":25,"nodeType":"141","endLine":128,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":137,"column":17,"nodeType":"141","endLine":137,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":143,"column":25,"nodeType":"141","endLine":143,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":155,"column":25,"nodeType":"141","endLine":155,"endColumn":28},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"133","line":8,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":10,"column":5,"nodeType":"121","messageId":"122","endLine":10,"endColumn":15},{"ruleId":"119","severity":1,"message":"135","line":13,"column":9,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":58,"column":129,"nodeType":"130","messageId":"131","endLine":58,"endColumn":130},{"ruleId":"125","severity":1,"message":"142","line":69,"column":12,"nodeType":"137","endLine":69,"endColumn":35,"suggestions":"143"},{"ruleId":"139","severity":1,"message":"140","line":89,"column":25,"nodeType":"141","endLine":89,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":103,"column":21,"nodeType":"141","endLine":103,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":109,"column":17,"nodeType":"141","endLine":109,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":115,"column":25,"nodeType":"141","endLine":115,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":143,"column":25,"nodeType":"141","endLine":143,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":157,"column":25,"nodeType":"141","endLine":157,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":165,"column":17,"nodeType":"141","endLine":165,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"133","line":8,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":10,"column":5,"nodeType":"121","messageId":"122","endLine":10,"endColumn":15},{"ruleId":"119","severity":1,"message":"135","line":13,"column":9,"nodeType":"121","messageId":"122","endLine":13,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":58,"column":129,"nodeType":"130","messageId":"131","endLine":58,"endColumn":130},{"ruleId":"125","severity":1,"message":"144","line":69,"column":12,"nodeType":"137","endLine":69,"endColumn":35,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"140","line":99,"column":25,"nodeType":"141","endLine":99,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":107,"column":21,"nodeType":"141","endLine":107,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":117,"column":25,"nodeType":"141","endLine":117,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":128,"column":25,"nodeType":"141","endLine":128,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":139,"column":21,"nodeType":"141","endLine":139,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":148,"column":21,"nodeType":"141","endLine":148,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":154,"column":17,"nodeType":"141","endLine":154,"endColumn":20},{"ruleId":"139","severity":1,"message":"140","line":160,"column":25,"nodeType":"141","endLine":160,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":188,"column":25,"nodeType":"141","endLine":188,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":197,"column":17,"nodeType":"141","endLine":197,"endColumn":20},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'currPage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardHeader' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'characterId', 'hash', and 'ts'. Either include them or remove the dependency array.","ArrayExpression",["148"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'hash', 'seriesId', and 'ts'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has missing dependencies: 'comicsId', 'hash', and 'ts'. Either include them or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [characterId, hash, props.match.params.id, ts]",{"range":"157","text":"158"},"Update the dependencies array to be: [hash, props.match.params.id, seriesId, ts]",{"range":"159","text":"160"},"Update the dependencies array to be: [comicsId, hash, props.match.params.id, ts]",{"range":"161","text":"162"},[2039,2062],"[characterId, hash, props.match.params.id, ts]",[2011,2034],"[hash, props.match.params.id, seriesId, ts]",[2011,2034],"[comicsId, hash, props.match.params.id, ts]"]