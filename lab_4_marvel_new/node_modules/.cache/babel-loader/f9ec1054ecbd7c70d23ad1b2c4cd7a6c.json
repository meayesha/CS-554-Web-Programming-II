{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n\n    async function fetchData() {\n      let offset = 0;\n\n      try {\n        const {\n          data\n        } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n        setCharacters(data);\n        setLoading(false);\n        console.log(characters);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  let characterdata = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((character, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${character.id}`,\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 25\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CharacterPage, {\n        characters: characterdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CharacterPage, \"se88jO1G0g5OWzM+mQKkafmf/pY=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","useParams","axios","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","fetchData","offset","data","get","e","characterdata","results","map","character","index","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAU;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACQ,SAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMW,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,QAAMC,SAAS,GAAG,kCAAlB;AACA,QAAMC,UAAU,GAAG,0CAAnB;AACA,QAAMC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,QAAMC,YAAY,GAAGH,EAAE,GAAGD,UAAL,GAAkBD,SAAvC;AACA,QAAMM,IAAI,GAAGR,GAAG,CAACO,YAAD,CAAhB;AACAjB,EAAAA,SAAS,CAAC,MAAI;AAEVmB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,mBAAeC,SAAf,GAA2B;AACvB,UAAIC,MAAM,GAAG,CAAb;;AACA,UAAI;AACA,cAAM;AAACC,UAAAA;AAAD,YAAQ,MAAMrB,KAAK,CAACsB,GAAN,CAAU,wDAAuD,MAAvD,GAAgEV,EAAhE,GAAqE,UAArE,GAAkFF,SAAlF,GAA8F,QAA9F,GAAyGM,IAAnH,CAApB;AACAZ,QAAAA,aAAa,CAACiB,IAAD,CAAb;AACAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACH,OALD,CAKC,OAAMoB,CAAN,EAAQ;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACH;AACJ;;AACDJ,IAAAA,SAAS;AACZ,GAfQ,EAeP,EAfO,CAAT;;AAiBA,MAAIK,aAAa,gBAAG;AAAA,cACfrB,UAAU,IAAIA,UAAU,CAACkB,IAAX,CAAgBI,OAAhB,CAAwBC,GAAxB,CAA4B,CAACC,SAAD,EAAYC,KAAZ,KAAoB;AAC3D,0BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,IAAI,EAAG,eAAcD,SAAS,CAACE,EAAG,EAA7D;AAAA,oBAAiEF,SAAS,CAACG;AAA3E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANc;AADC;AAAA;AAAA;AAAA;AAAA,UAApB;;AAUA,MAAGxB,OAAH,EAAW;AACP,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOI;AACA,wBACI;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEkB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CAlDD;;GAAMvB,a;;KAAAA,a;AAoDN,eAAeA,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport axios from 'axios';\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    useEffect(()=>{\n       \n        console.log(\"enter useEffect\")\n        async function fetchData() {\n            let offset = 0;\n            try {\n                const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n                setCharacters(data);\n                setLoading(false);\n                console.log(characters);\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n    },[]);\n\n    let characterdata =(<div>\n        {characters && characters.data.results.map((character, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${character.id}`}>{character.name}</a>\n                    </div>\n            )\n        })}\n    </div>)\n\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n              <CharacterPage characters={characterdata}/>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}