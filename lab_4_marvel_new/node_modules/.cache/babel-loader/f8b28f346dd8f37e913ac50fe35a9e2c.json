{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport Page from './Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [getPage, setGetPage] = useState(0);\n  let col = null;\n  let page = null;\n  let currPage = null;\n  let details = [];\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\"); // setParamValue(parseInt(props.match.params.page));\n    // setPageNumber(parseInt(props.match.params.page));\n\n    currPage = Number(props.match.params.page);\n\n    async function fetchData() {\n      try {\n        fetch('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + (currPage * 20).toString()).then(response => response.json()).then(data => setCharacters(data));\n        setLoading(false);\n        console.log(characters);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [getPage]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  let characterData = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${item.id}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this);\n\n  const pageNum = bool => {\n    let page = 0;\n\n    if (bool) {\n      page++;\n      setGetPage(page);\n    } else {\n      page--;\n      setGetPage(page);\n    }\n\n    ;\n  }; // Pagination Component\n\n\n  if (characters && characters.data.count <= Math.floor(characters.data.total / 20)) {\n    page = /*#__PURE__*/_jsxDEV(Page, {\n      pageNum: [pageNum, characters.data.limit, page, 'characters']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  } else {\n    page = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Character Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), characterData, /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        sm: 3,\n        md: 3,\n        lg: 5,\n        children: col\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharacterPage, \"G9LuKEzonO/5eshC/j2La/kvkh0=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","Link","Row","Col","Container","axios","Page","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","getPage","setGetPage","col","page","currPage","details","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","Number","match","params","fetchData","fetch","toString","then","response","json","data","e","characterData","results","map","item","index","id","name","pageNum","bool","count","Math","floor","total","limit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios';\n\nimport Page from './Page'\n\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [ getPage, setGetPage ] = useState(0);\n    let col = null;\n    let page = null;\n    let currPage = null;\n    let details = [];\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    \n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        // setParamValue(parseInt(props.match.params.page));\n        // setPageNumber(parseInt(props.match.params.page));\n        currPage = Number(props.match.params.page);\n        async function fetchData() {\n            try {\n               \n                fetch('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash+'&limit=20&offset=' + (currPage * 20).toString())\n            .then(response => response.json())\n            .then(data => setCharacters(data)) \n                            setLoading(false);\n                            console.log(characters); \n                    }catch(e){\n                        \n                console.log(e);\n            }\n        }\n        \n        fetchData();\n    },[getPage]);\n                \n   \n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    \n    let characterData =(<div>\n        {characters && characters.data.results.map((item, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${item.id}`}>{item.name}</a>\n                    </div>\n            )\n        })}\n    </div>);\n    const pageNum = (bool) => {\n        let page = 0;\n        if (bool) {\n            page ++;\n            setGetPage(page);\n        } else {\n            page --;\n            setGetPage(page);\n        };\n    };\n     \n    // Pagination Component\n    if (characters && characters.data.count <= Math.floor(characters.data.total / 20)) {\n        page = <Page pageNum = {[pageNum, characters.data.limit, page, 'characters']} />\n    } else {\n        page = null\n    }\n    return (\n        <div className=\"container mt-5\">\n                <h1 className=\"text-primary mb-3\">Character Names</h1>\n                {characterData}\n        <Container>\n            <br />\n            <br />\n            <Row className = 'page' sm = {3} md = {3} lg = {5}>\n                {col} \n            </Row>\n            <br />\n            <Row className = 'page'> \n                {page}\n            </Row>\n        </Container>\n        </div>\n    );\n};\n\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}