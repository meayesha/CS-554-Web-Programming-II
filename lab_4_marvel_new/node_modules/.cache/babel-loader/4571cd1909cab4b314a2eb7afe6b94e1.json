{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import {useParams} from \"react-router-dom\";\n\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  const offset = currentPage * 20;\n\n  function handlePageClick({\n    selected: selectedPage\n  }) {\n    setCurrentPage(selectedPage);\n  }\n\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n\n    async function fetchData() {\n      try {\n        const {\n          data\n        } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20' + '&offset=' + offset);\n        setCharacters(data);\n        setLoading(false);\n        console.log(characters);\n        console.log(\"Offset is\" + offset);\n        console.log(\"page is\" + currentPage);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  let characterdata = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((character, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${character.id}`,\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"<- Previous\",\n        nextLabel: \"Next ->\",\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        previousLinkClassName: \"pagination__link\",\n        nextLinkClassName: \"pagination__link\",\n        disabledClassName: \"pagination__link--disabled\",\n        activeClassName: \"pagination__link--active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(CharacterPage, {\n        characters: characterdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CharacterPage, \"cREqGW3mS2mliK97o9WMTzB1rSE=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","axios","ReactPaginate","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","currentPage","setCurrentPage","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","offset","handlePageClick","selected","selectedPage","console","log","fetchData","data","get","e","characterdata","results","map","character","index","id","name"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\n//import {useParams} from \"react-router-dom\";\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\n\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(0);\n\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    const offset = currentPage * 20;\n    function handlePageClick({ selected: selectedPage }) {\n        setCurrentPage(selectedPage);\n      }\n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        async function fetchData() {\n            try {\n                const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash+'&limit=20'+ '&offset=' + offset);\n                setCharacters(data);\n                setLoading(false);\n                console.log(characters);\n                console.log(\"Offset is\" +offset);\n                console.log(\"page is\" +currentPage);\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n    },[]);\n\n    let characterdata =(<div>\n        {characters && characters.data.results.map((character, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${character.id}`}>{character.name}</a>\n                    </div>\n            )\n        })}\n    </div>)\n\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n               <ReactPaginate\n               previousLabel ={\"<- Previous\"}\n               nextLabel ={\"Next ->\"}\n               onPageChange={handlePageClick}\n               containerClassName={\"pagination\"}\n               previousLinkClassName={\"pagination__link\"}\n               nextLinkClassName={\"pagination__link\"}\n               disabledClassName={\"pagination__link--disabled\"}\n               activeClassName={\"pagination__link--active\"}\n             />\n              <CharacterPage characters={characterdata}/>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}