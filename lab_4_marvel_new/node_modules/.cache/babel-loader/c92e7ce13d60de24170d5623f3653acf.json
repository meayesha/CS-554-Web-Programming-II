{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport Paginator from \"./Paginator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState({\n    next: null,\n    previous: null,\n    results: []\n  });\n  const [loading, setLoading] = useState(true);\n  let {\n    page\n  } = useParams();\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n\n    async function fetchData() {\n      try {\n        let url = \"\";\n\n        if (page == 0) {\n          url = 'https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash;\n        } else {\n          url = 'https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20' + `&offset=${page * 20}`;\n        }\n\n        const {\n          data\n        } = await axios.get(url);\n        setCharacters(data);\n        setLoading(false);\n        console.log(characters);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [page]); // let characterdata =(<div>\n  //     {characters && characters.data.map((character, index)=>{\n  //         return (\n  //             <div className=\"pagecontainer\">\n  //                 <a className=\"pagecontent\" href={`/characters/${character.id}`}>{character.name}</a>\n  //                 </div>\n  //         )\n  //     })}\n  // </div>)\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CharacterPage, {\n        characters: characterdata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Paginator, {\n        first: 0,\n        last: parseInt(characterdata.count / 20),\n        current: parseInt(page),\n        base: \"/characters/page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CharacterPage, \"OYcljckQn7zO3ZJ8v/CcZ0Hvcxo=\", false, function () {\n  return [useParams];\n});\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","useParams","axios","ReactPaginate","Paginator","CharacterPage","props","characters","setCharacters","next","previous","results","loading","setLoading","page","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","fetchData","url","data","get","e","characterdata","parseInt","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAU;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,QAAQ,EAAE,IAAvB;AAA6BC,IAAAA,OAAO,EAAE;AAAtC,GAAD,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI;AAACe,IAAAA;AAAD,MAASb,SAAS,EAAtB;;AAEA,QAAMc,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AACA,QAAMC,SAAS,GAAG,kCAAlB;AACA,QAAMC,UAAU,GAAG,0CAAnB;AACA,QAAMC,EAAE,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX;AACA,QAAMC,YAAY,GAAGH,EAAE,GAAGD,UAAL,GAAkBD,SAAvC;AACA,QAAMM,IAAI,GAAGR,GAAG,CAACO,YAAD,CAAhB;AAEAtB,EAAAA,SAAS,CAAC,MAAI;AACVwB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,mBAAeC,SAAf,GAA2B;AACvB,UAAI;AACD,YAAIC,GAAG,GAAE,EAAT;;AACC,YAAGb,IAAI,IAAI,CAAX,EAAa;AACTa,UAAAA,GAAG,GAAC,wDAAuD,MAAvD,GAAgER,EAAhE,GAAqE,UAArE,GAAkFF,SAAlF,GAA8F,QAA9F,GAAyGM,IAA7G;AACH,SAFD,MAEK;AACDI,UAAAA,GAAG,GAAC,wDAAuD,MAAvD,GAAgER,EAAhE,GAAqE,UAArE,GAAkFF,SAAlF,GAA8F,QAA9F,GAAyGM,IAAzG,GAA8G,WAA9G,GAA6H,WAAUT,IAAI,GAAE,EAAG,EAApJ;AACH;;AACD,cAAM;AAACc,UAAAA;AAAD,YAAQ,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,GAAV,CAApB;AACAnB,QAAAA,aAAa,CAACoB,IAAD,CAAb;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEAW,QAAAA,OAAO,CAACC,GAAR,CAAYlB,UAAZ;AACH,OAZD,CAYC,OAAMuB,CAAN,EAAQ;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACH;AACJ;;AACDJ,IAAAA,SAAS;AACZ,GApBQ,EAoBP,CAACZ,IAAD,CApBO,CAAT,CAZ4B,CAkC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAGF,OAAH,EAAW;AACP,wBACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAOI;AACA,wBACI;AAAA,8BACG,QAAC,aAAD;AAAe,QAAA,UAAU,EAAEmB;AAA3B;AAAA;AAAA;AAAA;AAAA,cADH,eAEG,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,CAAlB;AAAqB,QAAA,IAAI,EAAEC,QAAQ,CAACD,aAAa,CAACE,KAAd,GAAoB,EAArB,CAAnC;AAA6D,QAAA,OAAO,EAAED,QAAQ,CAAClB,IAAD,CAA9E;AAAsF,QAAA,IAAI,EAAC;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AACJ,CA3DD;;GAAMT,a;UAGWJ,S;;;KAHXI,a;AA6DN,eAAeA,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport Paginator from \"./Paginator\";\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState({next: null, previous: null, results: []});\n    const [loading, setLoading] = useState(true);\n    let {page} = useParams();\n\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    \n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        async function fetchData() {\n            try {\n               let url= \"\";\n                if(page == 0){\n                    url='https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash;\n                }else{\n                    url='https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash+'&limit=20'+  `&offset=${page *20}`;\n                }\n                const {data} =await axios.get(url);\n                setCharacters(data);\n                setLoading(false);\n               \n                console.log(characters);\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n    },[page]);\n\n    // let characterdata =(<div>\n    //     {characters && characters.data.map((character, index)=>{\n    //         return (\n    //             <div className=\"pagecontainer\">\n    //                 <a className=\"pagecontent\" href={`/characters/${character.id}`}>{character.name}</a>\n    //                 </div>\n    //         )\n    //     })}\n    // </div>)\n\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n               <CharacterPage characters={characterdata}/>\n               <Paginator first={0} last={parseInt(characterdata.count/20)} current={parseInt(page)} base=\"/characters/page\"/>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}