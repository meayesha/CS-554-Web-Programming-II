{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharacterInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { makeStyles, Card, CardContent, CardMedia, Typography, CardHeader } from '@material-ui/core';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 550,\n    height: 'auto',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: 5,\n    border: '1px solid #1e8678',\n    boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n  },\n  titleHead: {\n    borderBottom: '1px solid #1e8678',\n    fontWeight: 'bold'\n  },\n  grid: {\n    flexGrow: 1,\n    flexDirection: 'row'\n  },\n  media: {\n    height: '100%',\n    width: '100%'\n  },\n  button: {\n    color: '#1e8678',\n    fontWeight: 'bold',\n    fontSize: 12\n  }\n});\n\nconst CharacterInfo = props => {\n  _s();\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  const [characterId, setCharacterId] = useState(undefined);\n  const [characterInfo, setCharacterInfo] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setCharacterId(parseInt(props.match.params.id));\n\n    async function fetchData() {\n      try {\n        const {\n          data\n        } = await axios.get(`https://gateway.marvel.com:443/v1/public/characters/${props.match.params.id}` + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n        setCharacterInfo(data);\n        setLoading(false);\n        console.log('param is' + characterId);\n        console.log(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [props.match.params.id]);\n\n  let characterData = /*#__PURE__*/_jsxDEV(CardContent, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      children: /*#__PURE__*/_jsxDEV(\"dl\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: characterInfo && characterInfo.data.results.map((character, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"id: \", character.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"name: \", character.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"description: \", character.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"modified: \", character.modified]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"thumbnail\",\n                  children: \"Thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" path: \", character.thumbnail.path]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" extension: \", character.thumbnail.extension]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"resourceURI: \", character.resourceURI]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"comics\",\n                  children: \"Comics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" available: \", character.comics.available]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" collectionURI: \", character.comics.collectionURI]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this), character.comics.items.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"resourceURI: \", item.resourceURI]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"name: \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 24\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\"returned: \", character.comics.returned]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"series\",\n                  children: \"Series\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" available: \", character.series.available]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" collectionURI: \", character.series.collectionURI]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this), character.series.items.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"resourceURI: \", item.resourceURI]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"name: \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\"returned: \", character.series.returned]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"stories\",\n                  children: \"Stories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\" available: \", character.stories.available]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\" collectionURI: \", character.stories.collectionURI]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), character.stories.items.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"resourceURI: \", item.resourceURI]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"name: \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"type: \", item.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\"returned: \", character.stories.returned]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"events\",\n                  children: \"Events\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" available: \", character.events.available]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                    children: [\" collectionURI: \", character.events.collectionURI]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }, this), character.events.items.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"resourceURI: \", item.resourceURI]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"name: \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"dd\", {\n                  children: [\"returned: \", character.stories.returned]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n                  className: \"urls\",\n                  children: \"URLS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 20\n                }, this), character.urls.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"type: \", item.type]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n                      children: [\"url: \", item.url]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: characterData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(CharacterInfo, \"6eUa45F2X8Cdf7v+AQNLh96ziHo=\");\n\n_c = CharacterInfo;\nexport default CharacterInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterInfo\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharacterInfo.js"],"names":["React","useState","useEffect","axios","Link","makeStyles","Card","CardContent","CardMedia","Typography","CardHeader","useStyles","card","maxWidth","height","marginLeft","marginRight","borderRadius","border","boxShadow","titleHead","borderBottom","fontWeight","grid","flexGrow","flexDirection","media","width","button","color","fontSize","CharacterInfo","props","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","characterId","setCharacterId","undefined","characterInfo","setCharacterInfo","loading","setLoading","parseInt","match","params","id","fetchData","data","get","console","log","e","characterData","results","map","character","index","name","description","modified","thumbnail","path","extension","resourceURI","comics","available","collectionURI","items","item","returned","series","stories","type","events","urls","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {\n    makeStyles,\n    Card,\n    CardContent,\n    CardMedia,\n    Typography,\n    CardHeader\n  } from '@material-ui/core';\n  import '../App.css';\n  const useStyles = makeStyles({\n    card: {\n      maxWidth: 550,\n      height: 'auto',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      borderRadius: 5,\n      border: '1px solid #1e8678',\n      boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n    },\n    titleHead: {\n      borderBottom: '1px solid #1e8678',\n      fontWeight: 'bold'\n    },\n    grid: {\n      flexGrow: 1,\n      flexDirection: 'row'\n    },\n    media: {\n      height: '100%',\n      width: '100%'\n    },\n    button: {\n      color: '#1e8678',\n      fontWeight: 'bold',\n      fontSize: 12\n    }\n  });\nconst CharacterInfo = (props) => {\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    const [characterId, setCharacterId] = useState(undefined);\n    const [characterInfo, setCharacterInfo] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(\n        () => {\n\n            setCharacterId(parseInt(props.match.params.id));\n            async function fetchData() {\n                try {\n                    const { data } = await axios.get(`https://gateway.marvel.com:443/v1/public/characters/${props.match.params.id}` + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n                    setCharacterInfo(data);\n                    setLoading(false);\n                    console.log('param is' + characterId);\n                    console.log(data);\n                } catch (e) {\n                    console.log(e);\n                }\n\n            }\n            fetchData();\n        }, [props.match.params.id]\n    );\n\n    let characterData =(\n        \n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n            <dl>\n    <div>\n        {characterInfo && characterInfo.data.results.map((character, index)=>{\n            return (\n                <div>\n                <p>id: {character.id}</p>\n                <p>name: {character.name}</p>\n                <p>description: {character.description}</p>\n                <p>modified: {character.modified}</p>\n                <p>\n                    <dt className=\"thumbnail\">Thumbnail</dt>\n                    <a>\n                    <dd> path: {character.thumbnail.path}</dd>\n                    <dd> extension: {character.thumbnail.extension}</dd>\n                    </a>\n                </p>\n                <p>resourceURI: {character.resourceURI}</p>\n                <p><dt className=\"comics\">Comics</dt>\n                <a>\n                    <dd> available: {character.comics.available}</dd>\n                    <dd> collectionURI: {character.comics.collectionURI}</dd>\n                    </a>\n                    {character.comics.items.map((item , index)=>{\n                        return(\n                       <a> \n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.comics.returned}</dd>\n                    </p>\n                <p><dt className=\"series\">Series</dt>\n                <a>\n                    <dd> available: {character.series.available}</dd>\n                    <dd> collectionURI: {character.series.collectionURI}</dd>\n                    </a>\n                    {character.series.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.series.returned}</dd></p>\n                <p><dt className=\"stories\">Stories</dt>\n                    <dd> available: {character.stories.available}</dd>\n                    <dd> collectionURI: {character.stories.collectionURI}</dd>\n                    \n                    {character.stories.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        <dd>type: {item.type}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.stories.returned}</dd></p>\n                <p><dt className=\"events\">Events</dt>\n                <a>\n                    <dd> available: {character.events.available}</dd>\n                    <dd> collectionURI: {character.events.collectionURI}</dd>\n                    </a>\n                    {character.events.items.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>resourceURI: {item.resourceURI}</dd>\n                        <dd>name: {item.name}</dd>\n                        </a>\n                        )})}\n                        \n                        <dd>returned: {character.stories.returned}</dd>\n                        </p>\n                <p><dt className=\"urls\">URLS</dt>\n                \n                    {character.urls.map((item , index)=>{\n                        return(\n                        <a>\n                        <dd>type: {item.type}</dd>\n                        <dd>url: {item.url}</dd>\n                        </a>\n                        )})}\n                        \n                </p>\n                 </div>\n            )\n        })}\n        </div>\n        </dl>\n        </Typography>\n        </CardContent>\n      \n        )\n        if(loading){\n            return(\n                <div>\n                    <h2>Loading .....</h2>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div>\n                    {characterData}\n                </div>\n            )\n        }\n    }\n    \n    export default CharacterInfo;\n"]},"metadata":{},"sourceType":"module"}