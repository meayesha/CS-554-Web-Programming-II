{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport Page from './Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeriesPage = props => {\n  _s();\n\n  const [series, setSeries] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [getPage, setGetPage] = useState(0);\n  let col = null;\n  let page = 0;\n  let currPage = null;\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n\n    async function fetchData() {\n      try {\n        fetch('https://gateway.marvel.com:443/v1/public/series' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + (currPage * 20).toString()).then(response => response.json()).then(data => setSeries(data));\n        setLoading(false);\n        console.log(series);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [getPage]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  let seriesData = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: series && series.data.results.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/series/${item.id}`,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 22\n  }, this);\n\n  const pageNum = bool => {\n    page = series.data.offset;\n\n    if (bool) {\n      page++;\n      setGetPage(page);\n    } else {\n      page--;\n      setGetPage(page);\n    }\n\n    ;\n  };\n\n  if (series && series.data.count <= Math.floor(series.data.total / 20)) {\n    page = /*#__PURE__*/_jsxDEV(Page, {\n      pageNum: [pageNum, series.data.offset / 20, series.data.offset / 20, 'series']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  } else {\n    page = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Series Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), seriesData, /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        sm: 3,\n        md: 3,\n        lg: 5,\n        children: col\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SeriesPage, \"eV5eXZlPxeztukpkGTlNgY2XQNQ=\");\n\n_c = SeriesPage;\nexport default SeriesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeriesPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/SeriesPage.js"],"names":["React","useState","useEffect","Link","Row","Col","Container","axios","Page","SeriesPage","props","series","setSeries","undefined","loading","setLoading","getPage","setGetPage","col","page","currPage","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","fetchData","fetch","toString","then","response","json","data","e","seriesData","results","map","item","index","id","title","pageNum","bool","offset","count","Math","floor","total"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios';\n\nimport Page from './Page'\n\nconst SeriesPage = (props) =>{\n    const [series, setSeries] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [ getPage, setGetPage ] = useState(0);\n    let col = null;\n    let page = 0;\n    let currPage = null;\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n\n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        async function fetchData() {\n            try {\n                fetch('https://gateway.marvel.com:443/v1/public/series'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash+'&limit=20&offset=' + (currPage * 20).toString())\n            .then(response => response.json())\n            .then(data => setSeries(data)) \n                            setLoading(false);\n                            console.log(series); \n                    }catch(e){\n                        \n                console.log(e);\n            }\n        }\n        \n        fetchData();\n    },[getPage]);\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    let seriesData =(<div>\n        {series && series.data.results.map((item, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/series/${item.id}`}>{item.title}</a>\n                    </div>\n            )\n        })}\n    </div>)\n\nconst pageNum = (bool) => {\n    page = series.data.offset ;\n   if (bool) {\n       page ++;\n       setGetPage(page);\n   } else {\n       page --;\n       setGetPage(page);\n   };\n};\nif (series && series.data.count <= Math.floor(series.data.total / 20)) {\n    page = <Page pageNum = {[pageNum, series.data.offset/20, series.data.offset/20, 'series']} />\n} else {\n    page = null\n}\nreturn (\n    <div className=\"container mt-5\">\n            <h1 className=\"text-primary mb-3\">Series Names</h1>\n            {seriesData}\n    <Container>\n        <br />\n        <br />\n        <Row className = 'page' sm = {3} md = {3} lg = {5}>\n            {col} \n        </Row>\n        <br />\n        <Row className = 'page'> \n            {page}\n        </Row>\n    </Container>\n    </div>\n);\n};\n\n\nexport default SeriesPage;"]},"metadata":{},"sourceType":"module"}