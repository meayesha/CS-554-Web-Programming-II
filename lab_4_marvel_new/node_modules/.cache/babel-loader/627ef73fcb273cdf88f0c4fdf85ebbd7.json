{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport Page from './Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [getPage, setGetPage] = useState(0);\n  let col = null;\n  let page = null;\n  let currPage = null;\n  let details = [];\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\"); // setParamValue(parseInt(props.match.params.page));\n    // setPageNumber(parseInt(props.match.params.page));\n\n    currPage = Number(props.match.params.page);\n\n    async function fetchData() {\n      try {\n        const d = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + currPage * 20).then(async ({\n          data\n        }) => {\n          if (data.data.total > 0) {\n            return Promise.all(await data.data.results.map(async character => {\n              return await axios.get('https://gateway.marvel.com:443/v1/public/characters' + character.name + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash).then(indiv => {\n                details.push(indiv);\n              }).then(async res => {\n                setCharacters({\n                  details: details,\n                  pageData: {\n                    count: data.count,\n                    getPage: currPage\n                  }\n                });\n              });\n            }));\n          } else {\n            setCharacters(null);\n          }\n        });\n      } catch (e) {\n        setCharacters(null);\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [getPage]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n  let characterData = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${item.id}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 25\n  }, this);\n\n  const pageNum = bool => {\n    let page = characters.data.offset;\n\n    if (bool) {\n      page++;\n      setGetPage(page);\n    } else {\n      page--;\n      setGetPage(page);\n    }\n\n    ;\n  }; // Pagination Component\n\n\n  if (characters && character.data.offset <= Math.floor(characters.data.total / 20)) {\n    page = /*#__PURE__*/_jsxDEV(Page, {\n      pageNum: [pageNum, characters.data.offset, characters.data.count, 'characters']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  } else {\n    page = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Character Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), characterData, /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        sm: 3,\n        md: 3,\n        lg: 5,\n        children: col\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"page\",\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CharacterPage, \"G9LuKEzonO/5eshC/j2La/kvkh0=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","Link","Row","Col","Container","axios","Page","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","getPage","setGetPage","col","page","currPage","details","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","Number","match","params","fetchData","d","get","then","data","total","Promise","all","results","map","character","name","indiv","push","res","pageData","count","e","characterData","item","index","id","pageNum","bool","offset","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios';\n\nimport Page from './Page'\n\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [ getPage, setGetPage ] = useState(0);\n    let col = null;\n    let page = null;\n    let currPage = null;\n    let details = [];\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    \n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        // setParamValue(parseInt(props.match.params.page));\n        // setPageNumber(parseInt(props.match.params.page));\n        currPage = Number(props.match.params.page);\n        async function fetchData() {\n            try {\n               \n                const d =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash +'&limit=20&offset=' +(currPage*20)).then(async({data})=>{\n                    if(data.data.total > 0){\n                        return Promise.all(await data.data.results.map( async (character) =>{\n                            return await axios.get('https://gateway.marvel.com:443/v1/public/characters' + character.name+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash).then( (indiv) => {\n                                details.push(indiv);\n                            }).then( async (res) => {\n                                setCharacters( {details: details, pageData: {count: data.count, getPage: currPage} } ); \n                            });  \n                        }));\n                    }else{\n                        setCharacters(null);\n                    }\n                });\n               \n            }catch(e){\n                setCharacters(null);\n                console.log(e);\n            }\n        }\n        \n        fetchData();\n    },[getPage]);\n                \n   \n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    \n    let characterData =(<div>\n        {characters && characters.data.results.map((item, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${item.id}`}>{item.name}</a>\n                    </div>\n            )\n        })}\n    </div>);\n    const pageNum = (bool) => {\n        let page = characters.data.offset\n        if (bool) {\n            page ++;\n            setGetPage(page);\n        } else {\n            page --;\n            setGetPage(page);\n        };\n    };\n     \n    // Pagination Component\n    if (characters && character.data.offset <= Math.floor(characters.data.total / 20)) {\n        page = <Page pageNum = {[pageNum, characters.data.offset, characters.data.count, 'characters']} />\n    } else {\n        page = null\n    }\n    return (\n        <div className=\"container mt-5\">\n                <h1 className=\"text-primary mb-3\">Character Names</h1>\n                {characterData}\n        <Container>\n            <br />\n            <br />\n            <Row className = 'page' sm = {3} md = {3} lg = {5}>\n                {col} \n            </Row>\n            <br />\n            <Row className = 'page'> \n                {page}\n            </Row>\n        </Container>\n        </div>\n    );\n};\n\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}