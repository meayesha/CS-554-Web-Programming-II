{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [perPage] = useState(20);\n  const [pageCount, setPageCount] = useState(0);\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n\n    async function fetchData() {\n      try {\n        const {\n          data\n        } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n        const slice = data.results.slice(offset, offset + perPage);\n        const postData = slice.map(pd => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pd.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this)\n        }, pd.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 50\n        }, this));\n        setCharacters(postData);\n        setLoading(false);\n        setPageCount(Math.ceil(data.length / perPage));\n        console.log(characters);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const handlePageClick = e => {\n    const selectedPage = e.selected;\n    setOffset(selectedPage + 1);\n  };\n\n  let characterdata = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((character, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${character.id}`,\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [characterdata, /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"prev\",\n        nextLabel: \"next\",\n        breakLabel: \"...\",\n        breakClassName: \"break-me\",\n        pageCount: pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: handlePageClick,\n        containerClassName: \"pagination\",\n        subContainerClassName: \"pages pagination\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CharacterPage, \"9zcCTUYBBJ7Fq6EzKfK/5v5WD7E=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","axios","ReactPaginate","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","offset","setOffset","perPage","pageCount","setPageCount","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","fetchData","data","get","slice","results","postData","map","pd","title","id","Math","ceil","length","e","handlePageClick","selectedPage","selected","characterdata","character","index","name"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [offset, setOffset] = useState(0);\n    const [perPage] = useState(20);\n    const [pageCount, setPageCount] = useState(0)\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n\n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        async function fetchData() {\n            try {\n                const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash);\n                const slice=data.results.slice(offset, offset + perPage);\n                const postData = slice.map(pd => <div key={pd.id}>\n                    <p>{pd.title}</p></div>)\n                setCharacters(postData);\n                setLoading(false);\n                setPageCount(Math.ceil(data.length / perPage))\n                console.log(characters);\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n    },[]);\n\n    const handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        setOffset(selectedPage + 1)\n    };\n\n    let characterdata =(<div>\n        {characters && characters.data.results.map((character, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${character.id}`}>{character.name}</a>\n                    </div>\n            )\n        })}\n    </div>)\n\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div>\n                {characterdata}\n                <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}