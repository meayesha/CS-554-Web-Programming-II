{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Pagination from './PaginationCharacter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharacterPage = props => {\n  _s();\n\n  const [characters, setCharacters] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [pageNumber, setPageNumber] = useState(0);\n  const {\n    perPage\n  } = useState(20);\n\n  const md5 = require('blueimp-md5');\n\n  const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n  const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n  const ts = new Date().getTime();\n  const stringToHash = ts + privatekey + publickey;\n  const hash = md5(stringToHash);\n  ;\n  useEffect(() => {\n    console.log(\"enter useEffect\");\n    setPageNumber(pageNumber);\n\n    async function fetchData() {\n      try {\n        console.log(offset);\n        console.log(pageNumber);\n        const {\n          data\n        } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + offset);\n        setCharacters(data);\n        setLoading(false);\n        console.log(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const previousClick = async () => {\n    setOffset(offset - 20);\n    const {\n      data\n    } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + offset);\n    setCharacters(data);\n    setPageNumber(pageNumber - 1);\n    console.log(offset);\n    console.log(data);\n  };\n\n  const nextClick = async () => {\n    setOffset(offset + 20);\n    console.log(offset);\n    const {\n      data\n    } = await axios.get('https://gateway.marvel.com:443/v1/public/characters' + '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash + '&limit=20&offset=' + offset);\n    setCharacters(data);\n    setPageNumber(pageNumber + 1);\n    console.log(offset);\n    console.log(data);\n  }; //const indexOfFirstPage = indexOfLastPage -currentPage;\n\n\n  let characterData = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: characters && characters.data.results.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagecontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"pagecontent\",\n          href: `/characters/${item.id}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading .....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary mb-3\",\n        children: \"Character Names\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), characterData, /*#__PURE__*/_jsxDEV(Pagination, {\n        previousClick: previousClick,\n        nextClick: nextClick,\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CharacterPage, \"h6Mwi04pAwl6CgstWW+h1+IQmQ0=\");\n\n_c = CharacterPage;\nexport default CharacterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"sources":["/Users/ayeshaparveen/Desktop/Workspace/lab_4_marvel_new/src/components/CharactersPage.js"],"names":["React","useState","useEffect","axios","Pagination","CharacterPage","props","characters","setCharacters","undefined","loading","setLoading","offset","setOffset","pageNumber","setPageNumber","perPage","md5","require","publickey","privatekey","ts","Date","getTime","stringToHash","hash","console","log","fetchData","data","get","e","previousClick","nextClick","characterData","results","map","item","index","id","name"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Pagination from './PaginationCharacter';\nconst CharacterPage = (props) =>{\n    const [characters, setCharacters] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [offset , setOffset]= useState(0);\n    const [pageNumber, setPageNumber] = useState(0);\n    const{perPage} = useState(20);\n    const md5 = require('blueimp-md5');\n    const publickey = 'b3f3ae85c881c6196c303b96f1678274';\n    const privatekey = 'b82cf5047defc8b4ca20fd4bd5338432c0fe5739';\n    const ts = new Date().getTime();\n    const stringToHash = ts + privatekey + publickey;\n    const hash = md5(stringToHash);\n    ;\n    useEffect(()=>{\n        console.log(\"enter useEffect\");\n        setPageNumber(pageNumber);\n        async function fetchData() {\n            try {\n                console.log(offset);\n                console.log(pageNumber);\n                const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash +'&limit=20&offset=' +offset);\n                setCharacters(data);\n                \n                setLoading(false);\n                console.log(data);\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n        \n    },[]);\n    const previousClick = async () => {\n        setOffset(offset-20);\n        const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash +'&limit=20&offset=' +offset);\n                setCharacters(data);\n                setPageNumber(pageNumber-1);\n                console.log(offset);\n                console.log(data);\n           \n      };\n      const nextClick = async () => {\n        setOffset(offset+20);\n        console.log(offset);\n        const {data} =await axios.get('https://gateway.marvel.com:443/v1/public/characters'+ '?ts=' + ts + '&apikey=' + publickey + '&hash=' + hash +'&limit=20&offset=' +offset);\n                setCharacters(data);\n                setPageNumber(pageNumber+1);\n                console.log(offset);\n                console.log(data);\n           \n      };\n    //const indexOfFirstPage = indexOfLastPage -currentPage;\n\n    let characterData =(<div>\n        {characters && characters.data.results.map((item, index)=>{\n            return (\n                <div className=\"pagecontainer\">\n                    <a className=\"pagecontent\" href={`/characters/${item.id}`}>{item.name}</a>\n                    </div>\n            )\n        })}\n    </div>)\n\n    if(loading){\n        return(\n            <div>\n                <h2>Loading .....</h2>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div className=\"container mt-5\">\n                <h1 className=\"text-primary mb-3\">Character Names</h1>\n                {characterData}\n            <Pagination previousClick={previousClick} nextClick={nextClick} pageNumber={pageNumber}></Pagination>\n            </div>\n        )\n    }\n}\n\nexport default CharacterPage;"]},"metadata":{},"sourceType":"module"}